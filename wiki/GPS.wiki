#summary information related to acquiring GPS data on the PC/104
==Testing without a GPS module==
gpsd is available through the synaptic package manager, so there's no need to compile from source. 
To test gpsd:
  # make sure you have the *python-gps* and *gpsd-clients* installed.
  # use gpsfake to fool gpsd into thinking you have a GPS device attached that is spitting out data. To do this run the following command:('input.txt' is a file of your choice with NMEA strings.)
{{{
gpsfake input.txt
}}}
  # Open another terminal window and run the one of the GUI tools that let's you view the telemetry data by typing:
{{{
xgps
}}}

You should see data in the window if everything is set up correctly. If so, you can now test your own gps program. One option is to make queries via telnet. Since you are more than likely using the computer that the 'fake gps' is connected to, run the following command:
{{{
telnet localhost 2947
}}}
2947 is the default port, and localhost is your loopback address. In most cases, you will not need to change this.
=== Links ===
[http://gpsd.berlios.de/ gpsd homepage] - service daemon that can interface with a GPS device and make the data available to be queried on a TCP port.

[http://www.emacinc.com/manuals_drivers.htm PCM-3292 resources] - Site with drivers and documentation for the PCM3292 GPS device being used.